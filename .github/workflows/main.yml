---
name: Main

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-final-image:
    name: Build Final Image
    runs-on: ubuntu-latest

    permissions:
      packages: write
      pull-requests: write

    steps:

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # with:
        #   version: "lab:latest"
        #   driver: cloud
        #   endpoint: "slayoffer/devcraft"
        #   install: true


      - name: Login to ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata for Final Image Build
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/slayoffer/wordpress
          # flavor: |
          #   latest=false
          # tags: |
          #   type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
          #   type=ref,event=pr
          #   type=ref,event=branch
          #   type=semver,pattern={{version}}
          #   ghcr.io/slayoffer/wordpress:${{ github.run_id }}
      
      - name: Docker Build and Push to GHCR and Docker Hub
        uses: docker/build-push-action@v5
        with:
          push: true
          # tags: ${{ steps.docker_meta.outputs.tags }}
          tags: ghcr.io/slayoffer/wordpress:${{ github.run_id }}
          # labels: ${{ steps.docker_meta.outputs.labels }}
          file: "Dockerfile"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64,linux/arm64,linux/arm/v7
          platforms: linux/amd64
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}

      - name: Find comment for image tags
        uses: peter-evans/find-comment@v1
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed
      
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v1
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```

            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace

  deploy:
    name: Deploy Final Image
    needs: [build-final-image]
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_DB_HOST: ${{ secrets.MYSQL_DB_HOST }}
      IMAGE_NAME: wordpress:php8.3-apache
      # IMAGE_NAME: ghcr.io/slayoffer/wordpress:${{ github.run_id }}

    permissions:
      packages: read

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: 'Setup TLS and docker remote host'
        uses: blennster/setup-docker-remote-tls@v4
        with:
          tls_ca: ${{ secrets.TLS_CA }}
          tls_key: ${{ secrets.TLS_PRIVATE_KEY }}
          tls_cert: ${{ secrets.TLS_CERT }}
          tcp_host: ${{ secrets.TLS_HOST_IP }}

      - name: Login to ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Docker Stack Redeploy'
        run: docker service rm wpstack_wordpress && docker stack deploy -c compose.yml wpstack

